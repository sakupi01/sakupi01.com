name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
  # Comment out to enable these permissions if needed.
  # packages: write
  # deployments: write
  id-token: write

jobs:
  draft_release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release-drafter.outputs.tag_name }}
    steps:
      # Get next version
      - uses: release-drafter/release-drafter@09c613e259eb8d4e7c81c2cb00618eb5fc4575a7 # v5
        id: release-drafter
        with:
          config-name: release-drafter-git-green-cli.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # It creates GitHub Releases and push semver(major, minor, patch) git tags.
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    needs: draft_release
    steps:
      # Extract SemVers from tag (git-green-cli@1.0.0 -> 1 0 0)
      - name: Create SemVer outputs
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7
        id: semver
        with:
          script: |
            const TAG_NAME = "${{ needs.draft_release.outputs.tag_name }}"
            const matched = TAG_NAME.match(/@(\d+)\.(\d+)\.(\d+)/)
            if (matched) {
              core.setOutput('major', matched[1])
              core.setOutput('minor', matched[2])
              core.setOutput('patch', matched[3])
            } 

      # Use GitHub App for bypassing ruleset guard
      - uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1
        id: app-token
        with:
          app-id: ${{ secrets.PUSH_BYPASS_APP_ID }}
          private-key: ${{ secrets.PUSH_BYPASS_APP_PRIVATE_KEY }}

      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: main
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '22.x'

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 10.3.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build-packages
    
      - name: Setup git config
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      # Publish packages to npm registry and push updated package.json and package-lock.json
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '21.x'
          registry-url: 'https://registry.npmjs.org'
      - run: |
            cd ./packages/git-green-cli
            npm version ${{ steps.semver.outputs.major }}.${{ steps.semver.outputs.minor }}.${{ steps.semver.outputs.patch }}
            git add ./**/package.json ./**/pnpm-lock.yaml
            git commit -m "ðŸŽ‰release: release ${{ steps.semver.outputs.major }}.${{ steps.semver.outputs.minor }}.${{ steps.semver.outputs.patch }}"
            npm publish --provenance
            git push origin main
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
      - uses: release-drafter/release-drafter@09c613e259eb8d4e7c81c2cb00618eb5fc4575a7 # v5
        with:
          config-name: release-drafter-git-green-cli.yml
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}