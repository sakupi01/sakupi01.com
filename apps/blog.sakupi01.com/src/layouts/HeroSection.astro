---
import {
  convertToValidTimeDateString,
  formatRFC2822Date,
} from "../utils/formatRFC2822Date";

const { title, image, date, update, excerpt, tags } = Astro.props;
---
<div class="hero-section">
  <ul class="tags">
      {tags.map((tag: any) => (
        <li>
          <a href={`/tags/${tag}`}>#{tag}</a>
        </li>
      ))}
    </ul>
    <h1 class="title">{title}</h1>
    {image && <img src={image} alt={title} />}
    <p class="published"> Published on <time datetime={convertToValidTimeDateString(date)}>{formatRFC2822Date(date)}</time></p>
    <p class="update"> Updated on <time datetime={convertToValidTimeDateString(update)}>{formatRFC2822Date(update)}</time></p>
    <p class="excerpt">{excerpt}</p>
</div>

<style>
  .hero-section {
    margin-bottom: 2rem;
    font-family: var(--base-font-family-cascadia);
    font-weight: 400;
    font-optical-sizing: auto;
    .title {
      margin-block-start: var(--gutter-l);
      letter-spacing: .03em;
      text-wrap: pretty;
    }
    .tags {
      list-style: none;
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      padding: 0;
      a {
      transition: color .2s;
      &:hover {
          color: var(--focusable);
          text-decoration: underline;
          text-decoration-color: var(--focusable);
          text-decoration-thickness: 0.2rem;
          text-decoration-style: dotted;
          text-decoration-skip-ink: none;
      }
    }
  }

      .published {
      margin-block: var(--gutter-m);
      opacity: .7;
      font-style: italic;
      font-weight: 400;
    }
    .excerpt {
      opacity: .8;
      text-wrap: pretty;
      margin-block-end: 0;
      font-style: italic;
  }
  }
</style>